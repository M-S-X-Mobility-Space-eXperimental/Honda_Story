#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.60.4)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    def Xform "GeyserGroup"
    {
        def "geyser" (
            active = true
            references = @geyser/geyser.usdz@
        )
        {
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.1, 0.1, 0.1)
            float3 xformOp:translate = (0, -0.029551268, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            over "mtl"
            {
                over "geyser_lowSG"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                }
            }
        }

        def "holder" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            references = @geyser/holder.usdz@
        )
        {
            rel material:binding = </Root/GeyserGroup/holder/Materials/defaultMaterial> (
                bindMaterialAs = "strongerThanDescendants"
            )
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (3.05, 0.29999998, 3.05)
            float3 xformOp:translate = (0, -0.15981483, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            over "mtl"
            {
                over "initialShadingGroup" (
                    references = @../SmoothConcrete.usdz@
                )
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (0, 110.5)
                }
            }

            over "Materials"
            {
                over "defaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex

                    over "Shader"
                    {
                        color3f inputs:diffuseColor = (0.12354091, 0.25806898, 0.058172576) (
                            colorSpace = "srgb_texture"
                        )
                    }
                }
            }
        }
    }

    def "Beaker" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 0, 0.67543954)
        }
        references = @../Beaker.usdz@
    )
    {
        reorder nameChildren = ["geom", "ParticleEmitter", "ParticleEmitter_1"]
        quatf xformOp:orient = (0.9435126, 0, 0, 0.3313365)
        float3 xformOp:scale = (0.6000001, 0.6000001, 0.6000002)
        float3 xformOp:translate = (0.3010788, 0.94573015, 0.10078442)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Xform "ParticleEmitter" (
            active = false
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = None (
                bindMaterialAs = "weakerThanDescendants"
            )
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (-0.038853083, 0.18061845, -0.0039134403)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "VFXEmitter"
            {
                token info:id = "RealityKit.VFXEmitter"

                def RealityKitStruct "currentState"
                {
                    token birthDirection = "Constant"
                    token birthLocation = "Volume"
                    int64 burstCount = 1
                    float3 emissionDirection = (0, 1, 0)
                    double emissionDuration = 0.1
                    double emissionDurationVariation = 0
                    token emitterShape = "Cone"
                    double idleDuration = 0
                    double idleDurationVariation = 0
                    bool isLocal = 1
                    bool isLocalFields = 1
                    bool isSpawningEnabled = 1
                    bool loops = 1
                    float particleSpeed = -2
                    float radialAmount = 0.17453292
                    float3 shapeSize = (0.01, 0.01, 0.001)
                    bool spawnInheritParentColor = 0
                    token spawnOccasion = "OnUpdate"
                    float spawnSpreadFactor = 0.034906585
                    float spawnSpreadFactorVariation = 0
                    float spawnVelocityFactor = 0.01
                    double warmupDuration = 0

                    def RealityKitStruct "mainEmitter"
                    {
                        float3 acceleration = (0, -1, 0)
                        token billboardMode = "Billboard"
                        float birthRate = 800
                        float birthRateVariation = 1000
                        token blendMode = "Additive"
                        float colorEvolutionPower = 1
                        float dampingFactor = 0
                        float4 endColorA = (0.0013309671, 0.03458923, 1, 1)
                        float4 endColorB = (0.0038644834, 0.33932266, 0.9394064, 1)
                        bool isLightingEnabled = 0
                        float noiseAnimationSpeed = 10
                        float noiseScale = 10
                        float noiseStrength = 1
                        token opacityOverLife = "EaseFadeOut"
                        float particleAngle = 0
                        float particleAngleVariation = 0
                        float particleAngularVelocity = 0
                        float particleAngularVelocityVariation = 0
                        asset particleImage = @../ParticleEmitterPresetTextures/rain.png@
                        double particleLifeSpan = 0.1
                        double particleLifeSpanVariation = 0.002
                        float particleMass = 10
                        float particleMassVariation = 0
                        float particleSize = 0.008
                        float particleSizeVariation = 0.0005
                        float3 radialGravityCenter = (1, 1, 0)
                        float radialGravityStrength = 1
                        float sizeMultiplierAtEndOfLifespan = 0.1
                        float sizeMultiplierAtEndOfLifespanPower = 0.9
                        token sortOrder = "IncreasingDepth"
                        float spreadingAngle = 0.034906585
                        float4 startColorA = (0.0038644834, 0.7002072, 0.8053193, 1)
                        float4 startColorB = (1, 1, 1, 0.1985979)
                        float stretchFactor = 1
                        bool useEndColor = 0
                        bool useEndColorRange = 1
                        bool useStartColorRange = 1
                        float3 vortexDirection = (0, 1, 0)
                        float vortexStrength = 0
                    }

                    def RealityKitStruct "spawnedEmitter"
                    {
                        float3 acceleration = (0, 1, 0)
                        token billboardMode = "Billboard"
                        float birthRate = 500
                        float birthRateVariation = 0
                        token blendMode = "Additive"
                        float colorEvolutionPower = 1
                        float dampingFactor = 0
                        float4 endColorA = (0.0013309671, 0.03458923, 1, 1)
                        float4 endColorB = (0.0022058822, 0.0021292898, 0.0033547794, 1)
                        bool isLightingEnabled = 0
                        float noiseAnimationSpeed = 0
                        float noiseScale = 0
                        float noiseStrength = 0
                        token opacityOverLife = "EaseFadeOut"
                        float particleAngle = 0
                        float particleAngleVariation = 0
                        float particleAngularVelocity = 0
                        float particleAngularVelocityVariation = 0
                        asset particleImage = @../ParticleEmitterPresetTextures/rain.png@
                        double particleLifeSpan = 0.2
                        double particleLifeSpanVariation = 0.004
                        float particleMass = 10
                        float particleMassVariation = 0
                        float particleSize = 0.008
                        float particleSizeVariation = 0
                        float3 radialGravityCenter = (0, -3, -3)
                        float radialGravityStrength = 0
                        float sizeMultiplierAtEndOfLifespan = 1
                        float sizeMultiplierAtEndOfLifespanPower = 1
                        token sortOrder = "IncreasingID"
                        float spreadingAngle = 0.18770911
                        float4 startColorA = (0.008189682, 0.20668025, 0.41563454, 0.2609168)
                        float4 startColorB = (0.8842864, 0.9319627, 0.95814264, 0.74736136)
                        float stretchFactor = 0.1
                        bool useEndColor = 0
                        bool useEndColorRange = 1
                        bool useStartColorRange = 1
                        float3 vortexDirection = (0, 0, 0)
                        float vortexStrength = 0
                    }
                }
            }
        }

        def Xform "ParticleEmitter_1"
        {
            quatf xformOp:orient = (0.94124377, 0, 0, -0.33772796)
            float3 xformOp:scale = (0.99999994, 0.99999994, 0.99999976)
            float3 xformOp:translate = (-0.07276071, 0.1305768, -0.008102194)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "VFXEmitter"
            {
                token info:id = "RealityKit.VFXEmitter"

                def RealityKitStruct "currentState"
                {
                    token birthDirection = "Constant"
                    token birthLocation = "Surface"
                    int64 burstCount = 10
                    float3 emissionDirection = (0, -1, 0)
                    double emissionDuration = 0.8
                    double emissionDurationVariation = 0
                    token emitterShape = "Point"
                    double idleDuration = 0
                    double idleDurationVariation = 0.3
                    bool isEmitting = 1
                    bool isLocal = 0
                    bool isSpawningEnabled = 0
                    bool loops = 1
                    float particleSpeed = 0.1
                    float particleSpeedVariation = 0
                    float3 shapeSize = (9, 9, 0)
                    bool spawnInheritParentColor = 0
                    token spawnOccasion = "OnBirth"
                    float spawnSpreadFactor = 0
                    float spawnSpreadFactorVariation = 0
                    float spawnVelocityFactor = 0.1
                    double warmupDuration = 0

                    def RealityKitStruct "mainEmitter"
                    {
                        float3 acceleration = (0, -2, 0)
                        token animationRepeatMode = "AutoReverse"
                        token billboardMode = "Billboard"
                        float birthRate = 400
                        float birthRateVariation = 0
                        token blendMode = "Additive"
                        float colorEvolutionPower = 0.2
                        float dampingFactor = 1
                        float4 endColorA = (0.9986965, 0.9674097, 0, 1)
                        float4 endColorB = (1, 1, 1, 1)
                        bool isAnimated = 0
                        bool isLightingEnabled = 0
                        float noiseAnimationSpeed = 0
                        float noiseScale = 1
                        float noiseStrength = 0.05
                        token opacityOverLife = "GradualFadeInOut"
                        float particleAngle = 0
                        float particleAngleVariation = 0
                        float particleAngularVelocity = 0
                        float particleAngularVelocityVariation = 0
                        asset particleImage = @../ParticleEmitterPresetTextures/rain.png@
                        double particleLifeSpan = 0.6
                        double particleLifeSpanVariation = 0.1
                        float particleMass = 5
                        float particleMassVariation = 0.1
                        float particleSize = 0.08
                        float particleSizeVariation = 0.003
                        float3 radialGravityCenter = (0, 1, 0)
                        float radialGravityStrength = 0.1
                        float sizeMultiplierAtEndOfLifespan = 0.1
                        float sizeMultiplierAtEndOfLifespanPower = 0.001
                        token sortOrder = "IncreasingID"
                        float spreadingAngle = 0.17453292
                        float4 startColorA = (0.11366237, 0.12791848, 0.21404114, 0.2828539)
                        float4 startColorB = (0.9171624, 0.96285486, 0.9694713, 0.27703333)
                        float stretchFactor = 18
                        bool useEndColor = 0
                        bool useEndColorRange = 1
                        bool useStartColorRange = 0
                        float3 vortexDirection = (0, 1, 0)
                        float vortexStrength = 0
                    }

                    def RealityKitStruct "spawnedEmitter"
                    {
                        float3 acceleration = (0, -2, 0)
                        token billboardMode = "Billboard"
                        float birthRate = 400
                        float birthRateVariation = 0
                        token blendMode = "Additive"
                        float colorEvolutionPower = 1
                        float dampingFactor = 0
                        float4 endColorA = (0.0013309671, 0.03458923, 1, 1)
                        float4 endColorB = (0.11386989, 0.0064959256, 0.10626237, 1)
                        bool isLightingEnabled = 0
                        float noiseAnimationSpeed = 0
                        float noiseScale = 0.4
                        float noiseStrength = 0
                        token opacityOverLife = "Constant"
                        float particleAngle = 0
                        float particleAngleVariation = 0
                        float particleAngularVelocity = 0
                        float particleAngularVelocityVariation = 0
                        asset particleImage = @../ParticleEmitterPresetTextures/rain.png@
                        double particleLifeSpan = 1
                        double particleLifeSpanVariation = 0
                        float particleMass = 1
                        float particleMassVariation = 0
                        float particleSize = 0.02
                        float particleSizeVariation = 0.001
                        float3 radialGravityCenter = (0, 0, 0)
                        float radialGravityStrength = 0
                        float sizeMultiplierAtEndOfLifespan = 0.1
                        float sizeMultiplierAtEndOfLifespanPower = 0
                        token sortOrder = "IncreasingID"
                        float spreadingAngle = 0
                        float4 startColorA = (0.0038644834, 0.014077924, 0.016044877, 1)
                        float4 startColorB = (0.014316898, 0.42585433, 0.8716601, 1)
                        float stretchFactor = 0
                        bool useEndColor = 0
                        bool useEndColorRange = 0
                        bool useStartColorRange = 1
                        float3 vortexDirection = (0, 1, 0)
                        float vortexStrength = 0
                    }
                }
            }
        }
    }

    def "tube_re" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        customData = {
            float3 rotationEulerHint = (0, 0, -0.015401568)
        }
        references = @Particles/tube_re.usdz@
    )
    {
        reorder nameChildren = ["mtl", "Material"]
        rel material:binding = </Root/tube_re/mtl/TubeShaderMaterial> (
            bindMaterialAs = "strongerThanDescendants"
        )
        quatf xformOp:orient = (0.9999704, 0, 0, -0.007700708)
        float3 xformOp:scale = (0.01, 0.01, 0.01)
        float3 xformOp:translate = (0.2408421, 1.7737392, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "mtl"
        {
            reorder nameChildren = ["TubeShaderMaterial", "initialShadingGroup"]
            over "initialShadingGroup"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (0, 110.5)
            }

            def Material "TubeShaderMaterial"
            {
                float inputs:LiquidLevel = 20 (
                    customData = {
                        dictionary realitykit = {
                            float2 positionInSubgraph = (-776.8775, 434.28867)
                            int stackingOrderInSubgraph = 188
                        }
                    }
                )
                color4f inputs:SideColor = (0.2566038, 0.94687915, 0.0012408085, 0.43527526) (
                    colorSpace = "lin_srgb"
                    customData = {
                        dictionary realitykit = {
                            float2 positionInSubgraph = (-829.7406, 24.791153)
                            int stackingOrderInSubgraph = 273
                        }
                    }
                )
                color4f inputs:TopColor = (0.4021462, 0.8098642, 0.20979916, 0.6210679) (
                    colorSpace = "lin_srgb"
                    customData = {
                        dictionary realitykit = {
                            float2 positionInSubgraph = (-828.0124, 94.48712)
                            int stackingOrderInSubgraph = 273
                        }
                    }
                )
                token outputs:mtlx:surface.connect = </Root/tube_re/mtl/TubeShaderMaterial/PreviewSurface.outputs:out>
                token outputs:realitykit:vertex
                float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (407.26654, 68.06474)
                int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

                def Shader "PreviewSurface"
                {
                    uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
                    color3f inputs:diffuseColor = (0.46135616, 0.30864826, 0.25930125) (
                        colorSpace = "srgb_texture"
                    )
                    float inputs:metallic
                    float3 inputs:normal
                    float inputs:opacity.connect = </Root/tube_re/mtl/TubeShaderMaterial/Step.outputs:out>
                    float inputs:roughness
                    token outputs:out
                    float2 ui:nodegraph:node:pos = (159.74963, 35.662476)
                    int ui:nodegraph:node:stackingOrder = 139
                }

                def Shader "Position_World"
                {
                    uniform token info:id = "ND_position_vector3"
                    string inputs:space = "world"
                    float3 outputs:out
                    float2 ui:nodegraph:node:pos = (-836.76196, 229.98206)
                    int ui:nodegraph:node:stackingOrder = 171
                }

                def Shader "Position_Object"
                {
                    uniform token info:id = "ND_position_vector3"
                    float3 outputs:out
                    float2 ui:nodegraph:node:pos = (-835.66675, 322.71484)
                    int ui:nodegraph:node:stackingOrder = 171
                }

                def Shader "Subtract"
                {
                    uniform token info:id = "ND_subtract_vector3"
                    float3 inputs:in1.connect = </Root/tube_re/mtl/TubeShaderMaterial/Position_World.outputs:out>
                    float3 inputs:in2.connect = </Root/tube_re/mtl/TubeShaderMaterial/Position_Object.outputs:out>
                    float3 outputs:out
                    float2 ui:nodegraph:node:pos = (-615.5897, 288.64212)
                    int ui:nodegraph:node:stackingOrder = 171
                }

                def Shader "Swizzle"
                {
                    uniform token info:id = "ND_swizzle_vector3_float"
                    string inputs:channels = "y"
                    float3 inputs:in.connect = </Root/tube_re/mtl/TubeShaderMaterial/Subtract.outputs:out>
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (-469.44568, 292.23807)
                    int ui:nodegraph:node:stackingOrder = 171
                    string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
                }

                def Shader "Step"
                {
                    uniform token info:id = "ND_realitykit_step_float"
                    float inputs:edge = 0
                    float inputs:edge.connect = </Root/tube_re/mtl/TubeShaderMaterial/Remap.outputs:out>
                    float inputs:in.connect = </Root/tube_re/mtl/TubeShaderMaterial/Swizzle.outputs:out>
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (-286.4064, 277.00098)
                    int ui:nodegraph:node:stackingOrder = 171
                }

                def Shader "Remap"
                {
                    uniform token info:id = "ND_remap_float"
                    float inputs:in.connect = </Root/tube_re/mtl/TubeShaderMaterial.inputs:LiquidLevel>
                    float inputs:inhigh = -5
                    float inputs:inlow = 0
                    float inputs:outhigh = 1
                    float inputs:outlow
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (-469.9338, 442.12546)
                    int ui:nodegraph:node:stackingOrder = 198
                    string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:inhigh"]
                }

                def Shader "Normal"
                {
                    uniform token info:id = "ND_normal_vector3"
                    string inputs:space = "world"
                    float3 outputs:out
                    float2 ui:nodegraph:node:pos = (-917.7459, -259.6535)
                    int ui:nodegraph:node:stackingOrder = 360
                }

                def Shader "CameraPosition"
                {
                    uniform token info:id = "ND_realitykit_cameraposition_vector3"
                    float3 outputs:out
                    float2 ui:nodegraph:node:pos = (-1141.6327, -193.45952)
                    int ui:nodegraph:node:stackingOrder = 357
                }

                def Shader "Position"
                {
                    uniform token info:id = "ND_position_vector3"
                    string inputs:space = "world"
                    float3 outputs:out
                    float2 ui:nodegraph:node:pos = (-1162.8699, -125.38953)
                    int ui:nodegraph:node:stackingOrder = 357
                }

                def Shader "Subtract_1"
                {
                    uniform token info:id = "ND_subtract_vector3"
                    float3 inputs:in1.connect = </Root/tube_re/mtl/TubeShaderMaterial/CameraPosition.outputs:out>
                    float3 inputs:in2.connect = </Root/tube_re/mtl/TubeShaderMaterial/Position.outputs:out>
                    float3 outputs:out
                    float2 ui:nodegraph:node:pos = (-947.80774, -165.88805)
                    int ui:nodegraph:node:stackingOrder = 357
                }

                def Shader "DotProduct"
                {
                    uniform token info:id = "ND_dotproduct_vector3"
                    float3 inputs:in1.connect = </Root/tube_re/mtl/TubeShaderMaterial/Normal.outputs:out>
                    float3 inputs:in2.connect = </Root/tube_re/mtl/TubeShaderMaterial/Subtract_1.outputs:out>
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (-653.4104, -189.06183)
                    int ui:nodegraph:node:stackingOrder = 363
                }

                def Shader "Step_1"
                {
                    uniform token info:id = "ND_realitykit_step_float"
                    float inputs:in.connect = </Root/tube_re/mtl/TubeShaderMaterial/DotProduct.outputs:out>
                    float2 ui:nodegraph:node:pos = (-447.95932, -187.76843)
                    int ui:nodegraph:node:stackingOrder = 368
                }
            }
        }
    }
}


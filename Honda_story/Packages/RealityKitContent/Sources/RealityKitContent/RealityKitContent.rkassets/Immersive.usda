#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

reorder rootPrims = ["Root", "GridMaterial"]

def Xform "Root"
{
    reorder nameChildren = ["Sphere_Left", "AIBison", "bisonM", "testing", "Sphere_Right", "Timeline", "HondaCar", "HondaCar_M", "GeyserPlaceholder"]
    def RealityKitTimeline "Timeline"
    {
        reorder nameChildren = ["Track2", "Track"]
        def RealityKitTrack "Track2"
        {
            def RealityKitAction "Animation"
            {
                string actionKind = "animation"
                string animation = "default subtree animation"
                int blendLayer = 500
                double duration = 1
                uniform token info:id = "B826ECA1-7107-452D-8B13-76623C1A13AA"
                double loopCount = 0
                bool separateAnimatedValue = 1
                double startTime = 0
                rel target = </Root/WalkingBison>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }
    }

    def "EsmeTestingScene" (
        active = true
        references = @EsmeTestingScene.usda@
    )
    {
        reorder nameChildren = ["GeyserGroup", "Collider", "InputTarget", "RCP_BehaviorsContainer", "OnTap", "AnimationLibrary", "Cube"]
        float3 xformOp:scale = (0.12, 0.12, 0.12)
        float3 xformOp:translate = (-0.5863614, 0.6982096, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (6.0065885, 0.6966542, 6.006589)
                float height = 0.6966542
                float radius = 3.0032945
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (0, -0.11140166, -5.9604645e-7)
                }
            }
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitComponent "RCP_BehaviorsContainer"
        {
            rel behaviors = </Root/EsmeTestingScene/OnTap>
            uniform token info:id = "RCP.BehaviorsContainer"
        }

        def Preliminary_Behavior "OnTap"
        {
            rel actions = </Root/EsmeTestingScene/OnTap/Action>
            uniform bool exclusive
            rel triggers = </Root/EsmeTestingScene/OnTap/Trigger>

            def Preliminary_Trigger "Trigger"
            {
                rel affectedObjects = </Root/EsmeTestingScene>
                token info:id = "TapGesture"
            }

            def Preliminary_Action "Action"
            {
                rel affectedObjects = </Root>
                rel animationLibraryKey = </Root/GeyserPlaceholder>
                rel animationLibraryKeyOverrideKey = </Root/EsmeTestingScene/OnTap/Trigger>
                token info:id = "PlayTimeline"
                int loops = 0
                int performCount = 1
                token type = "serial"
            }
        }

        def RealityKitComponent "AnimationLibrary"
        {
            uniform token info:id = "RealityKit.AnimationLibrary"
        }

        def Cube "Cube" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/EsmeTestingScene/Cube/DefaultMaterial>
            double size = 0.2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.8333334, 0.8333334, 0.8333334)
            float3 xformOp:translate = (0.24183846, 0.014605999, 0.42841068)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/EsmeTestingScene/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        over "GeyserGroup"
        {
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }
    }

    def RealityKitTimeline "GeyserPlaceholder"
    {
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Emphasize"
            {
                string actionKind = "emphasize"
                int blendLayer = 300
                double duration = 10
                uniform token info:id = "1E5DCCAA-1323-4763-96AE-E68889B3AC96"
                double startTime = 0.021674107142857144
                token style = "playful"
                rel target = </Root/EsmeTestingScene/Cube>
            }
        }
    }

    def "Car" (
        active = true
        prepend references = @Car.usdz@
    )
    {
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, -3.7414205)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "Environment" (
        active = true
        prepend references = @Environment.usdz@
    )
    {
        float3 xformOp:scale = (2, 2, 2)
        float3 xformOp:translate = (0, 1.5337582, 18.237839)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }
}


#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.60.4)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    def Xform "GeyserGroup"
    {
        def "geyser" (
            active = true
            references = @geyser/geyser.usdz@
        )
        {
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.1, 0.1, 0.1)
            float3 xformOp:translate = (0, -0.029551268, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            over "mtl"
            {
                over "geyser_lowSG"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                }
            }
        }

        def "holder" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            references = @geyser/holder.usdz@
        )
        {
            rel material:binding = </Root/GeyserGroup/holder/Materials/defaultMaterial> (
                bindMaterialAs = "strongerThanDescendants"
            )
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (3.05, 0.29999998, 3.05)
            float3 xformOp:translate = (0, -0.15981483, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            over "mtl"
            {
                over "initialShadingGroup" (
                    references = @../SmoothConcrete.usdz@
                )
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (0, 110.5)
                }
            }

            over "Materials"
            {
                over "defaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex

                    over "Shader"
                    {
                        color3f inputs:diffuseColor = (0.12354091, 0.25806898, 0.058172576) (
                            colorSpace = "srgb_texture"
                        )
                    }
                }
            }
        }
    }
}


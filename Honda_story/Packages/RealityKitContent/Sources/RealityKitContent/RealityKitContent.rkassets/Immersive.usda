#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

reorder rootPrims = ["Root", "BisonFoods"]

def Xform "Root"
{
    reorder nameChildren = ["Eruption", "GeyserSandbox", "Car", "Environment", "OldBisonFoods", "SKYBOX", "Bison", "Sphere", "GeyserErupt", "IntroGeyser", "GeyserBisonTrans", "BisonIdle", "BisonWalk", "StartCountDown", "CountDownGroup", "Audios", "Cube", "Transform", "Intro_YellowStone", "Cylinder", "BisonFoods", "BisonTransitTL"]
    float3 xformOp:translate = (0, 0, 0)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    def RealityKitTimeline "GeyserErupt"
    {
        reorder nameChildren = ["Track2", "Track"]
        def RealityKitTrack "Track2"
        {
            def RealityKitAction "Play_Audio"
            {
                string actionKind = "audio"
                string audioResourceName = "msx geyser sfx v1.wav"
                bool controlPlayback = 1
                double duration = 20.439504058367262
                double gain = -32.515554298642535
                uniform token info:id = "4460F7F5-0807-4692-9C2E-47FC5B7D0CAB"
                double startTime = 0
                rel target = </Root/GeyserSandbox>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }

        def RealityKitTrack "Track"
        {
            def RealityKitAction "Disable_Entity"
            {
                string actionKind = "disable"
                double duration = 0
                uniform token info:id = "5A5B7612-1568-4D4E-93CC-FBE0FB80799C"
                double startTime = 0
                rel target = </Root/CountDownGroup>
            }
        }
    }

    def "Car" (
        active = true
        customData = {
            float3 rotationEulerHint = (1.5707965, 4.712389, 0)
        }
        references = @ArtAssets/Car_V1.usdz@
    )
    {
        quatf xformOp:orient = (-0.49999988, 0.5000001, 0.49999988, 0.5000001)
        float3 xformOp:scale = (0.01, 0.01, 0.01)
        float3 xformOp:translate = (0.03371191, 0.0669359, -2.7222652)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "RCP_BehaviorsContainer"
        {
            rel behaviors = </Root/Car/OnAddedToScene>
            uniform token info:id = "RCP.BehaviorsContainer"
        }

        def Preliminary_Behavior "OnAddedToScene"
        {
            rel actions = </Root/Car/OnAddedToScene/Action>
            uniform bool exclusive
            rel triggers = </Root/Car/OnAddedToScene/Trigger>

            def Preliminary_Trigger "Trigger"
            {
                rel affectedObjects = </Root/Car>
                token info:id = "SceneTransition"
            }

            def Preliminary_Action "Action"
            {
                rel affectedObjects = </Root>
                rel animationLibraryKey = </Root/Intro_YellowStone>
                rel animationLibraryKeyOverrideKey = </Root/Car/OnAddedToScene/Trigger>
                token info:id = "PlayTimeline"
                int loops = 0
                int performCount = 1
                token type = "serial"
            }
        }
    }

    def "Environment" (
        customData = {
            float3 rotationEulerHint = (0, 1.3962636, 0)
        }
        references = @ArtAssets/Environment.usdz@
    )
    {
        quatf xformOp:orient = (0.76604444, 0, 0.64278764, 0)
        float3 xformOp:scale = (10, 10, 10)
        float3 xformOp:translate = (66.38554, 4.9042854, -162.43826)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def RealityKitTimeline "IntroGeyser"
    {
        reorder nameChildren = ["Track", "Track2", "Track3"]
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Play_Audio"
            {
                string actionKind = "audio"
                string audioResourceName = "Geyser Intro.mp3"
                bool controlPlayback = 1
                double duration = 41.33448572844313
                uniform token info:id = "0B9F85F0-52E9-4F6E-853F-4C1A077131A2"
                double startTime = 0
                rel target = </Root/Audios/AudioEmitter>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }

        def RealityKitTrack "Track2"
        {
            def RealityKitAction "Show"
            {
                string actionKind = "show"
                int blendLayer = 300
                double duration = 1
                uniform token info:id = "3E9DA4AD-9A31-4235-A037-18B988504E6B"
                double startTime = 0
                rel target = </Root/GeyserSandbox>

                def RealityKitStruct "timingFunction"
                {
                }
            }

            def RealityKitAction "Show2"
            {
                string actionKind = "show"
                int blendLayer = 300
                double duration = 1
                uniform token info:id = "1D606F8F-E672-4771-A0EB-6A74F549D071"
                double startTime = 40.350206585405715
                rel target = </Root/CountDownGroup>

                def RealityKitStruct "timingFunction"
                {
                }
            }
        }
    }

    def Xform "OldBisonFoods" (
        active = false
    )
    {
        reorder nameChildren = ["BisonTransitTL", "BlueGrass", "RCP_BehaviorsContainer", "OnTap", "AudioLibrary", "HierarchicalFade", "Apple", "WildFlower", "MushRoom", "_bison_basket"]
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0.54307926, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def "Apple" (
            active = true
            references = @BisonFoods/ apple.usdz@
        )
        {
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.02, 0.02, 0.02)
            float3 xformOp:translate = (-0.42092538, 0.70718277, -0.22732228)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "HierarchicalFade"
            {
                uniform token info:id = "RealityKit.HierarchicalFade"
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (6.575633, 8.043767, 6.575635)
                    float radius = 4.0218835
                    token shapeType = "Sphere"

                    def RealityKitStruct "pose"
                    {
                        float3 position = (-3.5762787e-7, 1.0932437, -5.9604645e-7)
                    }
                }
            }

            def RealityKitComponent "InputTarget"
            {
                uniform token info:id = "RealityKit.InputTarget"
            }

            def RealityKitCustomComponent "RealityKitContent_GestureComponent"
            {
                uniform token info:id = "RealityKitContent.GestureComponent"
                bool pivotOnDrag = 1
                bool preserveOrientationOnPivotDrag = 1
            }
        }

        def "WildFlower" (
            active = true
            references = @BisonFoods/wildflower.usdz@
        )
        {
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.001, 0.001, 0.001)
            float3 xformOp:translate = (-0.5569175, 0.74326295, -0.2917847)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "HierarchicalFade"
            {
                uniform token info:id = "RealityKit.HierarchicalFade"
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (324.88168, 178.63387, 327.91165)
                    float radius = 163.95583
                    token shapeType = "Sphere"

                    def RealityKitStruct "pose"
                    {
                        float3 position = (2.8071136, 60.59014, 0.014160156)
                    }
                }
            }

            def RealityKitComponent "InputTarget"
            {
                uniform token info:id = "RealityKit.InputTarget"
            }

            def RealityKitCustomComponent "RealityKitContent_GestureComponent"
            {
                bool canScale = 1
                uniform token info:id = "RealityKitContent.GestureComponent"
                bool pivotOnDrag = 1
                bool preserveOrientationOnPivotDrag = 1
            }
        }

        def "MushRoom" (
            active = true
            references = @BisonFoods/PBR - Metallic Roughness Alpha-blend.usdz@
        )
        {
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.001, 0.001, 0.001)
            float3 xformOp:translate = (-0.58251977, 0.7531353, -0.033406764)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "HierarchicalFade"
            {
                uniform token info:id = "RealityKit.HierarchicalFade"
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (196.76712, 200, 196.7605)
                    float radius = 100
                    token shapeType = "Sphere"

                    def RealityKitStruct "pose"
                    {
                        float3 position = (0.0000038146973, 0, 0.0000038146973)
                    }
                }
            }

            def RealityKitComponent "InputTarget"
            {
                uniform token info:id = "RealityKit.InputTarget"
            }

            def RealityKitCustomComponent "RealityKitContent_GestureComponent"
            {
                uniform token info:id = "RealityKitContent.GestureComponent"
                bool pivotOnDrag = 1
                bool preserveOrientationOnPivotDrag = 1
            }
        }

        def "BlueGrass" (
            active = true
            references = @BisonFoods/bluegrass.usdz@
        )
        {
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.1, 0.1, 0.1)
            float3 xformOp:translate = (-0.29634574, 0.74373317, -0.10018117)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "InputTarget"
            {
                uniform token info:id = "RealityKit.InputTarget"
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (1.4477186, 1.5373735, 1.3437186)
                    float radius = 0.7686868
                    token shapeType = "Sphere"

                    def RealityKitStruct "pose"
                    {
                        float3 position = (-0.59720755, 0.4779856, 0.3228675)
                    }
                }
            }

            def RealityKitComponent "HierarchicalFade"
            {
                uniform token info:id = "RealityKit.HierarchicalFade"
            }

            def RealityKitCustomComponent "RealityKitContent_GestureComponent"
            {
                uniform token info:id = "RealityKitContent.GestureComponent"
                bool pivotOnDrag = 1
                bool preserveOrientationOnPivotDrag = 1
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def "_bison_basket" (
            active = true
            customData = {
                float3 rotationEulerHint = (0, 0, 0)
            }
            references = @BisonFoods/ bison_basket.usdz@
        )
        {
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.004, 0.004, 0.004)
            float3 xformOp:translate = (-0.48961073, 0.732359, -0.16279852)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Xform "BisonTransitTL" (
            active = true
        )
        {
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (-0.54307926, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "RCP_BehaviorsContainer"
            {
                rel behaviors = </Root/BisonFoods/BisonTransitTL/OnTap>
                uniform token info:id = "RCP.BehaviorsContainer"
            }

            def Preliminary_Behavior "OnTap"
            {
                rel actions = </Root/BisonFoods/BisonTransitTL/OnTap/Action>
                uniform bool exclusive
                rel triggers = </Root/BisonFoods/BisonTransitTL/OnTap/Trigger>

                def Preliminary_Trigger "Trigger"
                {
                    rel affectedObjects = </Root/BisonFoods/BisonTransitTL>
                    token info:id = "TapGesture"
                }

                def Preliminary_Action "Action"
                {
                    rel affectedObjects = </Root>
                    rel animationLibraryKey = </Root/GeyserBisonTrans>
                    rel animationLibraryKeyOverrideKey = </Root/BisonFoods/BisonTransitTL/OnTap/Trigger>
                    token info:id = "PlayTimeline"
                    int loops = 0
                    int performCount = 1
                    token type = "serial"
                }
            }
        }
    }

    def "SKYBOX" (
        active = true
        references = @ArtAssets/SKYBOX.usd@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1000, 1000, 1000)
        float3 xformOp:translate = (44.513832, 0, 209.28337)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "mtl"
        {
            over "initialShadingGroup"
            {
                token inputs:frame:stPrimvarName = "st" (
                    customData = {
                        dictionary realitykit = {
                            bool hide = 1
                        }
                    }
                )
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/SKYBOX/mtl/initialShadingGroup/UsdPreviewSurface.outputs:surface>
                float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (0, 110.5)

                def Shader "UsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.18, 0.18, 0.18)
                    color3f inputs:diffuseColor.connect = </Root/SKYBOX/mtl/initialShadingGroup/diffuseColor.outputs:rgb>
                    token outputs:surface
                }

                def Shader "diffuseColor"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file = @ArtAssets/rosendal_mountain_midmorning_4k.hdr@
                    float2 inputs:st.connect = </Root/SKYBOX/mtl/initialShadingGroup/diffuseColor/TexCoordReader.outputs:result>
                    color3f outputs:rgb

                    def Shader "TexCoordReader"
                    {
                        uniform token info:id = "UsdPrimvarReader_float2"
                        token inputs:varname.connect = </Root/SKYBOX/mtl/initialShadingGroup.inputs:frame:stPrimvarName>
                        float2 outputs:result
                    }
                }
            }
        }
    }

    def "Eruption" (
        customData = {
            float3 rotationEulerHint = (0, 0, 0)
        }
        references = @ArtAssets/Eruption.usdz@
    )
    {
        reorder nameChildren = ["smoke", "smoke_1", "AudioLibrary", "HierarchicalFade"]
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1.0000002, 1.0000002, 1.0000002)
        float3 xformOp:translate = (-0.020460412, 0.5508565, -0.10463826)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "smoke_1"
        {
            float3 xformOp:translate = (0, -0.031540066, 0)

            over "VFXEmitter"
            {
                over "currentState"
                {
                    bool isEmitting = 1

                    over "mainEmitter"
                    {
                        float dampingFactor = 15
                        float radialGravityStrength = -0.1
                        float3 vortexDirection = (0.1, -1, 0)
                    }

                    over "spawnedEmitter"
                    {
                        float3 acceleration = (0, -0.1, 0)
                        float dampingFactor = 0.1
                        float particleAngle = 0.017453292
                        float particleMass = 1
                        float3 radialGravityCenter = (0, 0.1, 0)
                        float3 vortexDirection = (0.02, -0.02, 0.02)
                    }
                }
            }
        }

        over "smoke" (
            customData = {
                float3 rotationEulerHint = (-0.08726621, 0, 0)
            }
        )
        {
            quatf xformOp:orient = (0.99904823, -0.043619264, 0, 0)

            over "VFXEmitter"
            {
                over "currentState"
                {
                    float3 shapeSize = (0.1, 0.1, 0.1)

                    over "mainEmitter"
                    {
                        float3 acceleration = (0, -0.2, 0)
                        float dampingFactor = 15
                        float4 endColorA = (0.59082115, 0.7648289, 0.66320205, 0.3903327)
                        float4 endColorB = (1, 1, 1, 1)
                        float noiseScale = 0.5
                        float particleMass = 1.3
                        float particleSize = 0.03
                        float3 radialGravityCenter = (0, 0, 0)
                        float sizeMultiplierAtEndOfLifespan = 7
                        bool useEndColor = 1
                        bool useEndColorRange = 1
                        float3 vortexDirection = (0.5, -0.5, 0.5)
                    }
                }
            }
        }

        def RealityKitComponent "AudioLibrary"
        {
            uniform token info:id = "RealityKit.AudioLibrary"

            def RealityKitDict "resources"
            {
                string[] keys = ["msx geyser sfx v1.wav"]
                rel values = </Root/Audios/msx_geyser_sfx_v1_wav2>
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }
    }

    def RealityKitTimeline "GeyserBisonTrans"
    {
        reorder nameChildren = ["Track", "Track2", "Track_3", "Track_1", "Track3"]
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Play_Audio"
            {
                string actionKind = "audio"
                string audioResourceName = "Geyser End.mp3"
                bool controlPlayback = 1
                double duration = 56.595540734085205
                uniform token info:id = "95B8B835-4C0D-438B-AC10-19B5B237C5DE"
                double startTime = 0
                rel target = </Root/Audios/AudioEmitter>

                def RealityKitStruct "handoffType"
                {
                }
            }

            def RealityKitAction "Play_Audio2"
            {
                string actionKind = "audio"
                string audioResourceName = "Bison Intro.mp3"
                bool controlPlayback = 1
                double duration = 44.98285416666667
                uniform token info:id = "987429BA-FE06-4263-924B-6025A6CCD932"
                double startTime = 56.60131879509593
                rel target = </Root/Audios/AudioEmitter>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }

        def RealityKitTrack "Track2"
        {
            reorder nameChildren = ["Hide", "Disable_Entity", "Hide_12", "Disable_Entity_1", "Show"]
            def RealityKitAction "Hide_12"
            {
                string actionKind = "hide"
                int blendLayer = 300
                double duration = 5
                uniform token info:id = "35A010AA-5FC9-4D19-A56A-E52F2F250F56"
                double startTime = 51.59174354550458
                rel target = </Root/GeyserSandbox>
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1

                def RealityKitStruct "timingFunction"
                {
                }
            }

            def RealityKitAction "Disable_Entity_1"
            {
                string actionKind = "disable"
                double duration = 0
                uniform token info:id = "E71480E4-3EB4-4887-888C-2A1F7492E9BB"
                double startTime = 56.72242203034002
                rel target = </Root/Eruption>
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
            }
        }

        def RealityKitTrack "Track_1"
        {
            def RealityKitAction "Show"
            {
                string actionKind = "show"
                int blendLayer = 300
                double duration = 5
                uniform token info:id = "76F9D941-4022-45C7-93D7-132F27654DBD"
                double startTime = 56.643216772881885
                rel target = </Root/BisonFoods>
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1

                def RealityKitStruct "timingFunction"
                {
                }
            }
        }

        def RealityKitTrack "Track_3"
        {
            reorder nameChildren = ["Disable_Entity_1", "Hide"]
            def RealityKitAction "Hide"
            {
                string actionKind = "hide"
                int blendLayer = 300
                double duration = 5
                uniform token info:id = "B52A2139-20BC-48CF-B9FD-2E6CCB7CC441"
                double startTime = 51.58784153172642
                rel target = </Root/Eruption>
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1

                def RealityKitStruct "timingFunction"
                {
                }
            }

            def RealityKitAction "Disable_Entity"
            {
                string actionKind = "disable"
                double duration = 0
                uniform token info:id = "387D65B5-14A0-4CD6-8D55-05192242CD57"
                double startTime = 56.72776674983105
                rel target = </Root/GeyserSandbox>
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
            }
        }

        def RealityKitTrack "Track3"
        {
            def RealityKitAction "Show"
            {
                string actionKind = "show"
                int blendLayer = 300
                double duration = 5
                uniform token info:id = "7625FC0A-2882-4A00-88FA-A0FCA65D1439"
                double startTime = 56.64120986647835
                rel target = </Root/Bison>

                def RealityKitStruct "timingFunction"
                {
                }
            }
        }
    }

    def Xform "Bison" (
        active = true
    )
    {
        reorder nameChildren = ["BisonParent", "Bison_eat01"]
        float3 xformOp:translate = (3.9551637, 4.7683716e-7, -1.1813891)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Xform "BisonParent" (
            active = true
            customData = {
                float3 rotationEulerHint = (-1.570796, 4.712389, 0)
            }
        )
        {
            quatf xformOp:orient = (0.50000006, 0.4999999, -0.50000006, 0.4999999)
            float3 xformOp:scale = (0.01, 0.01, 0.01)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def "Bison_Model" (
                active = true
                references = @ArtAssets/Bisons/Bison_eat01.usdz@
            )
            {
                quatf xformOp:orient = (0.70710677, -0.7071067, -5.0129303e-15, -5.0129303e-15)
                quatf xformOp:orient.timeSamples = {
                    0: (0.70710677, -0.70710677, -5.0129303e-15, -5.0129303e-15),
                }
                float3 xformOp:scale = (0.99999994, 0.99999994, 0.99999994)
                float3 xformOp:scale.timeSamples = {
                    0: (1, 1, 1),
                }
                float3 xformOp:translate = (0, 0, 0)
                float3 xformOp:translate.timeSamples = {
                    0: (0, 0, 0),
                }
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "AnimationLibrary"
                {
                    token info:id = "RealityKit.AnimationLibrary"

                    def RealityKitAnimationFile "Bison_eat02"
                    {
                        uniform asset file = @ArtAssets/Bisons/Bison_eat02.usdz@
                        uniform bool looping = 1
                        uniform string name = "Bison_eat02"
                    }

                    def RealityKitAnimationFile "default_subtree_animation"
                    {
                        uniform bool looping = 1
                        uniform string name = "default subtree animation"
                    }

                    def RealityKitAnimationFile "Bison_walk03"
                    {
                        uniform asset file = @ArtAssets/Bisons/Bison_walk03.usdz@
                        uniform bool looping = 1
                        uniform string name = "Bison_walk03"
                    }
                }
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "RCP_BehaviorsContainer"
        {
            rel behaviors = [
                </Root/Bison/OnAddedToScene>,
                </Root/Bison/OnTap>,
            ]
            uniform token info:id = "RCP.BehaviorsContainer"
        }

        def Preliminary_Behavior "OnAddedToScene"
        {
            rel actions = </Root/Bison/OnAddedToScene/Action>
            uniform bool exclusive
            rel triggers = </Root/Bison/OnAddedToScene/Trigger>

            def Preliminary_Trigger "Trigger"
            {
                rel affectedObjects = </Root/Bison>
                token info:id = "SceneTransition"
            }

            def Preliminary_Action "Action"
            {
                rel affectedObjects = </Root>
                rel animationLibraryKey = </Root/BisonIdle>
                rel animationLibraryKeyOverrideKey = </Root/Bison/OnAddedToScene/Trigger>
                token info:id = "PlayTimeline"
                int loops = 0
                int performCount = 1
                token type = "serial"
            }
        }

        def RealityKitComponent "AnimationLibrary"
        {
            token info:id = "RealityKit.AnimationLibrary"

            def RealityKitAnimationFile "default_subtree_animation"
            {
                uniform bool looping = 1
                uniform string name = "default subtree animation"
            }
        }

        def Preliminary_Behavior "OnTap"
        {
            rel actions = </Root/Bison/OnTap/Action>
            uniform bool exclusive
            rel triggers = </Root/Bison/OnTap/Trigger>

            def Preliminary_Trigger "Trigger"
            {
                rel affectedObjects = </Root/Bison>
                token info:id = "TapGesture"
            }

            def Preliminary_Action "Action"
            {
                rel affectedObjects = </Root>
                rel animationLibraryKey = </Root/BisonWalk>
                rel animationLibraryKeyOverrideKey = </Root/Bison/OnTap/Trigger>
                token info:id = "PlayTimeline"
                int loops = 0
                int performCount = 1
                token type = "serial"
            }
        }
    }

    def RealityKitTimeline "BisonIdle"
    {
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Animation"
            {
                string actionKind = "animation"
                string animation = "Bison_eat02"
                int blendLayer = 500
                double duration = 5
                uniform token info:id = "F5445744-646D-4751-AA79-D74A860A55C1"
                double loopCount = 0
                bool separateAnimatedValue = 1
                double startTime = 0
                rel target = </Root/Bison/BisonParent/Bison_Model>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }
    }

    def RealityKitTimeline "BisonWalk"
    {
        reorder nameChildren = ["Track", "Track2", "Track3", "Track4"]
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Animation"
            {
                string actionKind = "animation"
                string animation = "Bison_walk03"
                int blendLayer = 500
                double duration = 2
                uniform token info:id = "89ECAE7B-8B72-4134-9C63-3303DBE117BF"
                double loopCount = 1
                bool separateAnimatedValue = 1
                double startTime = 0
                rel target = </Root/Bison/BisonParent/Bison_Model>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }

        def RealityKitTrack "Track3"
        {
            def RealityKitAction "Transform_To"
            {
                string actionKind = "moveTo"
                int blendLayer = 300
                double duration = 0.0001
                uniform token info:id = "B1F0E635-9B88-46CD-8E12-602735FF7510"
                float3 position = (-1.5, 0, 0)
                quatf rotation = (0.5, 0.5, -0.5, 0.5)
                float3 scale = (0.009999999, 0.009999999, 0.009999999)
                double startTime = 1.9832181373429314
                rel target = </Root/Bison/BisonParent>

                def RealityKitStruct "transformMode"
                {
                    rel referenceEntity = </Root>
                    token type = "parent"
                }

                def RealityKitStruct "timingFunction"
                {
                }
            }
        }

        def RealityKitTrack "Track4"
        {
            def RealityKitAction "Animation"
            {
                string actionKind = "animation"
                string animation = "default subtree animation"
                int blendLayer = 500
                double duration = 11.366666793823242
                uniform token info:id = "E2E77FA7-A8C9-40C1-9A5C-AEF8E534A8D9"
                bool separateAnimatedValue = 1
                double startTime = 2.0171534270047142
                rel target = </Root/Bison/BisonParent/Bison_Model>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }
    }

    def Sphere "Sphere" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Sphere/DefaultMaterial>
        double radius = 0.1
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            prepend token outputs:surface.connect = </Root/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }

    def RealityKitTimeline "StartCountDown"
    {
        reorder nameChildren = ["Track", "Track2"]
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Animation"
            {
                string actionKind = "animation"
                string animation = "/Root/CountDownGroup/CountDown1/Timeline"
                int blendLayer = 500
                double duration = 3.4231143666519004
                uniform token info:id = "0DE53692-E953-4AD7-9CBA-A62CFFA91D78"
                double loopCount = 0
                bool separateAnimatedValue = 1
                double startTime = 0
                rel target = </Root/CountDownGroup/CountDown1>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }

        def RealityKitTrack "Track2"
        {
            def RealityKitAction "Animation"
            {
                string actionKind = "animation"
                string animation = "/Root/CountDownGroup/CountDown2/Timeline"
                int blendLayer = 500
                double duration = 3.4231143666519004
                uniform token info:id = "D3039627-369D-4969-9A50-AD292F4B3DD5"
                double loopCount = 0
                bool separateAnimatedValue = 1
                double startTime = 0
                rel target = </Root/CountDownGroup/CountDown2>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }
    }

    def Xform "CountDownGroup" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 0, 0)
        }
    )
    {
        reorder nameChildren = ["CountDown1", "CountDown2"]
        quatf xformOp:orient = (1, 0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def "CountDown1" (
            active = true
            customData = {
                float3 rotationEulerHint = (0, 0, 0)
            }
            references = @ArtAssets/CountDownAnim.usdz@
        )
        {
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.2, 0.2, 0.2)
            float3 xformOp:translate = (-0.00182, 0.75177, -0.05484)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "AnimationLibrary"
            {
                token info:id = "RealityKit.AnimationLibrary"

                def RealityKitAnimationFile "_Root_CountDownGroup_CountDown1_Timeline"
                {
                    uniform bool looping = 1
                    uniform string name = "/Root/CountDownGroup/CountDown1/Timeline"
                }

                def RealityKitAnimationFile "_Root_CountDownAnim_Timeline"
                {
                    uniform bool looping = 1
                    uniform string name = "/Root/CountDownAnim/Timeline"
                }
            }
        }

        def "CountDown2" (
            active = true
            customData = {
                float3 rotationEulerHint = (0, 3.1415927, 0)
            }
            references = @ArtAssets/CountDownAnim.usdz@
        )
        {
            float2 ui:nodegraph:node:pos = (20, 20)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (-4.371139e-8, 0, 1, 0)
            float3 xformOp:scale = (0.2, 0.2, 0.2)
            float3 xformOp:translate = (0, 0.75177, -0.25484)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "AnimationLibrary"
            {
                token info:id = "RealityKit.AnimationLibrary"

                def RealityKitAnimationFile "_Root_CountDownAnim_Timeline"
                {
                    uniform bool looping = 1
                    uniform string name = "/Root/CountDownAnim/Timeline"
                }

                def RealityKitAnimationFile "_Root_CountDownGroup_CountDown1_Timeline"
                {
                    uniform bool looping = 1
                    uniform string name = "/Root/CountDownGroup/CountDown1/Timeline"
                }

                def RealityKitAnimationFile "_Root_CountDownGroup_CountDown2_Timeline"
                {
                    uniform bool looping = 1
                    uniform string name = "/Root/CountDownGroup/CountDown2/Timeline"
                }
            }
        }

        def RealityKitComponent "RCP_BehaviorsContainer"
        {
            rel behaviors = </Root/CountDownGroup/OnAddedToScene>
            uniform token info:id = "RCP.BehaviorsContainer"
        }

        def Preliminary_Behavior "OnAddedToScene"
        {
            rel actions = </Root/CountDownGroup/OnAddedToScene/Action>
            uniform bool exclusive
            rel triggers = </Root/CountDownGroup/OnAddedToScene/Trigger>

            def Preliminary_Trigger "Trigger"
            {
                rel affectedObjects = </Root/CountDownGroup>
                token info:id = "SceneTransition"
            }

            def Preliminary_Action "Action"
            {
                rel affectedObjects = </Root>
                rel animationLibraryKey = </Root/StartCountDown>
                rel animationLibraryKeyOverrideKey = </Root/CountDownGroup/OnAddedToScene/Trigger>
                token info:id = "PlayTimeline"
                int loops = 0
                int performCount = 1
                token type = "serial"
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 0
        }
    }

    def "GeyserSandbox" (
        references = @Sandbox.usda@
    )
    {
        reorder nameChildren = ["GeyserSoundTL", "GeyserGroup", "Collider", "InputTarget", "RCP_BehaviorsContainer", "OnTap", "AnimationLibrary", "Cube", "AudioLibrary", "HierarchicalFade"]
        float3 xformOp:scale = (0.12, 0.12, 0.12)
        float3 xformOp:translate = (0.010402441, 0.6091858, -0.14215899)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (6.0065885, 0.6966542, 6.006589)
                float height = 0.6966542
                float radius = 3.0032945
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (0, -0.11140166, -5.9604645e-7)
                }
            }
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitComponent "RCP_BehaviorsContainer"
        {
            rel behaviors = </Root/GeyserSandbox/OnTap>
            uniform token info:id = "RCP.BehaviorsContainer"
        }

        def Preliminary_Behavior "OnTap"
        {
            rel actions = </Root/GeyserSandbox/OnTap/Action>
            uniform bool exclusive
            rel triggers = </Root/GeyserSandbox/OnTap/Trigger>

            def Preliminary_Trigger "Trigger"
            {
                rel affectedObjects = </Root/GeyserSandbox>
                token info:id = "TapGesture"
            }

            def Preliminary_Action "Action"
            {
                rel affectedObjects = </Root>
                rel animationLibraryKey = </Root/GeyserErupt>
                rel animationLibraryKeyOverrideKey = </Root/GeyserSandbox/OnTap/Trigger>
                token info:id = "PlayTimeline"
                int loops = 0
                int performCount = 1
                token type = "serial"
            }
        }

        def RealityKitComponent "AnimationLibrary"
        {
            uniform token info:id = "RealityKit.AnimationLibrary"
        }

        def Cube "Cube" (
            active = false
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/GeyserSandbox/Cube/DefaultMaterial>
            double size = 0.2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.8333334, 0.8333334, 0.8333334)
            float3 xformOp:translate = (0.24183846, 0.014605999, 0.42841068)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/GeyserSandbox/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        over "GeyserGroup"
        {
            reorder nameChildren = ["Eruption", "geyser", "holder"]
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            over "geyser" (
                references = @ArtAssets/geyser.usdz@
            )
            {
            }
        }

        def RealityKitComponent "AudioLibrary"
        {
            uniform token info:id = "RealityKit.AudioLibrary"

            def RealityKitDict "resources"
            {
                string[] keys = ["msx geyser sfx v1.wav", "msx geyser sfx v1.wav 1"]
                rel values = </Root/Audios/msx_geyser_sfx_v1_wav>
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 0
        }

        def Xform "GeyserSoundTL" (
            active = true
        )
        {
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (8.333335, 8.333335, 8.333335)
            float3 xformOp:translate = (-0.08668702, -5.076549, 1.1846584)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "InputTarget"
            {
                uniform token info:id = "RealityKit.InputTarget"
            }

            def RealityKitComponent "RCP_BehaviorsContainer"
            {
                rel behaviors = </Root/GeyserSandbox/GeyserSoundTL/OnTap>
                uniform token info:id = "RCP.BehaviorsContainer"
            }

            def Preliminary_Behavior "OnTap"
            {
                rel actions = </Root/GeyserSandbox/GeyserSoundTL/OnTap/Action>
                uniform bool exclusive
                rel triggers = </Root/GeyserSandbox/GeyserSoundTL/OnTap/Trigger>

                def Preliminary_Trigger "Trigger"
                {
                    rel affectedObjects = </Root/GeyserSandbox/GeyserSoundTL>
                    token info:id = "TapGesture"
                }

                def Preliminary_Action "Action"
                {
                    rel affectedObjects = </Root>
                    rel animationLibraryKey = </Root/IntroGeyser>
                    rel animationLibraryKeyOverrideKey = </Root/GeyserSandbox/GeyserSoundTL/OnTap/Trigger>
                    token info:id = "PlayTimeline"
                    int loops = 0
                    int performCount = 1
                    token type = "serial"
                }
            }
        }
    }

    def Xform "Audios" (
        active = true
    )
    {
        reorder nameChildren = ["banana", "AudioEmitter", "msx_geyser_sfx_v1_wav", "Geyser_Intro_mp3", "Bison_Intro_mp3", "Bison_Eating_wav", "Geyser_End_mp3_1", "Yellowstone_Intro_mp3"]
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitAudioFile "msx_geyser_sfx_v1_wav"
        {
            uniform asset file = @Sounds/msx geyser sfx v1.wav@
            uniform bool shouldLoop = 0
        }

        def Xform "AudioEmitter" (
            active = true
        )
        {
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "AudioLibrary"
            {
                uniform token info:id = "RealityKit.AudioLibrary"

                def RealityKitDict "resources"
                {
                    string[] keys = ["Bison Intro.mp3", "Bison Eating.wav", "Geyser End.mp3", "Geyser Intro.mp3", "Yellowstone Intro.mp3"]
                    rel values = [
                        </Root/Audios/Bison_Intro_mp3>,
                        </Root/Audios/Bison_Eating_wav>,
                        </Root/Audios/Geyser_End_mp3_1>,
                        </Root/Audios/Geyser_Intro_mp3>,
                        </Root/Audios/Yellowstone_Intro_mp3>,
                    ]
                }
            }
        }

        def RealityKitAudioFile "Bison_Intro_mp3"
        {
            uniform asset file = @Sounds/Bison Intro.mp3@
            uniform bool shouldLoop = 0
        }

        def RealityKitAudioFile "Bison_Eating_wav"
        {
            uniform asset file = @Sounds/Bison Eating.wav@
            uniform bool shouldLoop = 0
        }

        def RealityKitAudioFile "Geyser_End_mp3_1"
        {
            uniform asset file = @Sounds/Geyser End.mp3@
            uniform bool shouldLoop = 0
        }

        def RealityKitAudioFile "Geyser_Intro_mp3"
        {
            uniform asset file = @Sounds/Geyser Intro.mp3@
            uniform bool shouldLoop = 0
        }

        def RealityKitAudioFile "Yellowstone_Intro_mp3"
        {
            uniform asset file = @Sounds/Yellowstone Intro.mp3@
            uniform bool shouldLoop = 0
        }
    }

    def Cube "Cube" (
        active = false
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["DefaultMaterial", "RealityKitContent_GestureComponent", "Collider", "InputTarget", "RCP_BehaviorsContainer", "OnCollision", "banana"]
        rel material:binding = </Root/Cube/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0.9978565, -0.87916356)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            prepend token outputs:surface.connect = </Root/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitCustomComponent "RealityKitContent_GestureComponent"
        {
            uniform token info:id = "RealityKitContent.GestureComponent"
        }
    }

    def Xform "Transform" (
        active = true
    )
    {
    }

    def RealityKitTimeline "Intro_YellowStone"
    {
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Play_Audio"
            {
                string actionKind = "audio"
                string audioResourceName = "Yellowstone Intro.mp3"
                bool controlPlayback = 1
                double duration = 34.08979166666666
                uniform token info:id = "FB0B82A9-6CFF-4A06-A273-2C78A3907184"
                double startTime = 0
                rel target = </Root/Audios/AudioEmitter>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }
    }

    def Cylinder "Cylinder" (
        active = false
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform token axis = "Y"
        double height = 0.2
        rel material:binding = </Root/Cylinder/DefaultMaterial>
        double radius = 0.1
        float3 xformOp:translate = (0.6880977, 0.8570777, -0.7619083)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            prepend token outputs:surface.connect = </Root/Cylinder/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.2, 0.2, 0.2)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitComponent "RigidBody"
        {
            bool gravityEnabled = 0
            uniform token info:id = "RealityKit.RigidBody"

            def RealityKitStruct "massFrame"
            {
                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
            }
        }
    }

    def "BisonFoods" (
        active = true
        references = @BisonFoods/bison assets.usda@
    )
    {
        reorder nameChildren = ["banana", "_bison_basket", "flower", "_apple", "PBR___Metallic_Roughness_Alpha_blend", "banana_1", "wildflower", "bluegrass", "HierarchicalFade", "BisonTransitTL"]
        float3 xformOp:scale = (0.4, 0.4, 0.4)
        float3 xformOp:translate = (0, 0.76564443, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 0
        }

        over "banana"
        {
            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (0.43227524, 1.5899107, 1.9999999)
                    token shapeType = "Box"

                    def RealityKitStruct "pose"
                    {
                        float3 position = (-1.4901161e-8, -2.9802322e-8, -5.9604645e-8)
                    }
                }
            }

            def RealityKitComponent "InputTarget"
            {
                uniform token info:id = "RealityKit.InputTarget"
            }

            def RealityKitCustomComponent "RealityKitContent_GestureComponent"
            {
                uniform token info:id = "RealityKitContent.GestureComponent"
            }
        }

        over "flower"
        {
            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (0.9203682, 1.3412473, 0.9698925)
                    float height = 1.3412473
                    float radius = 0.48494625
                    token shapeType = "Capsule"

                    def RealityKitStruct "pose"
                    {
                        float3 position = (-4.0756273, -0.660967, -11.840317)
                    }
                }
            }

            def RealityKitComponent "InputTarget"
            {
                uniform token info:id = "RealityKit.InputTarget"
            }

            def RealityKitCustomComponent "RealityKitContent_GestureComponent"
            {
                uniform token info:id = "RealityKitContent.GestureComponent"
            }
        }

        over "_apple"
        {
            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (6.575633, 8.043767, 6.575635)
                    float radius = 4.0218835
                    token shapeType = "Sphere"

                    def RealityKitStruct "pose"
                    {
                        float3 position = (-3.5762787e-7, 1.0932437, -5.9604645e-7)
                    }
                }
            }

            def RealityKitComponent "InputTarget"
            {
                uniform token info:id = "RealityKit.InputTarget"
            }

            def RealityKitCustomComponent "RealityKitContent_GestureComponent"
            {
                uniform token info:id = "RealityKitContent.GestureComponent"
            }
        }

        over "PBR___Metallic_Roughness_Alpha_blend"
        {
            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (196.76712, 200, 196.7605)
                    float height = 200
                    float radius = 98.38356
                    token shapeType = "Capsule"

                    def RealityKitStruct "pose"
                    {
                        float3 position = (0.0000038146973, 0, 0.0000038146973)
                    }
                }
            }

            def RealityKitComponent "InputTarget"
            {
                uniform token info:id = "RealityKit.InputTarget"
            }

            def RealityKitCustomComponent "RealityKitContent_GestureComponent"
            {
                uniform token info:id = "RealityKitContent.GestureComponent"
            }
        }

        over "banana_1"
        {
            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (0.43227524, 1.5899107, 1.9999999)
                    token shapeType = "Box"

                    def RealityKitStruct "pose"
                    {
                        float3 position = (-1.4901161e-8, -2.9802322e-8, -5.9604645e-8)
                    }
                }
            }

            def RealityKitComponent "InputTarget"
            {
                uniform token info:id = "RealityKit.InputTarget"
            }

            def RealityKitCustomComponent "RealityKitContent_GestureComponent"
            {
                uniform token info:id = "RealityKitContent.GestureComponent"
            }
        }

        over "wildflower"
        {
            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (324.88168, 178.63387, 327.91165)
                    float radius = 163.95583
                    token shapeType = "Sphere"

                    def RealityKitStruct "pose"
                    {
                        float3 position = (2.8071136, 60.59014, 0.014160156)
                    }
                }
            }

            def RealityKitComponent "InputTarget"
            {
                uniform token info:id = "RealityKit.InputTarget"
            }

            def RealityKitCustomComponent "RealityKitContent_GestureComponent"
            {
                uniform token info:id = "RealityKitContent.GestureComponent"
            }
        }

        over "bluegrass"
        {
            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (1.4477186, 1.5373735, 1.3437186)
                    float radius = 0.7686868
                    token shapeType = "Sphere"

                    def RealityKitStruct "pose"
                    {
                        float3 position = (-0.59720755, 0.4779856, 0.3228675)
                    }
                }
            }

            def RealityKitComponent "InputTarget"
            {
                uniform token info:id = "RealityKit.InputTarget"
            }

            def RealityKitCustomComponent "RealityKitContent_GestureComponent"
            {
                uniform token info:id = "RealityKitContent.GestureComponent"
            }
        }

        def Xform "BisonTransitTL" (
            active = true
        )
        {
            float2 ui:nodegraph:node:pos = (20, 20)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (0.99999994, 0, 0, 0)
            float3 xformOp:scale = (2.5000002, 2.5000002, 2.5000002)
            float3 xformOp:translate = (0, -1.9141113, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "RCP_BehaviorsContainer"
            {
                rel behaviors = </Root/BisonFoods/BisonTransitTL/OnTap>
                uniform token info:id = "RCP.BehaviorsContainer"
            }

            def Preliminary_Behavior "OnTap"
            {
                rel actions = </Root/BisonFoods/BisonTransitTL/OnTap/Action>
                uniform bool exclusive
                rel triggers = </Root/BisonFoods/BisonTransitTL/OnTap/Trigger>

                def Preliminary_Trigger "Trigger"
                {
                    rel affectedObjects = </Root/BisonFoods/BisonTransitTL>
                    token info:id = "TapGesture"
                }

                def Preliminary_Action "Action"
                {
                    rel affectedObjects = </Root>
                    rel animationLibraryKey = </Root/GeyserBisonTrans>
                    rel animationLibraryKeyOverrideKey = </Root/BisonFoods/BisonTransitTL/OnTap/Trigger>
                    token info:id = "PlayTimeline"
                    int loops = 0
                    int performCount = 1
                    token type = "serial"
                }
            }
        }
    }
}

